@{
    IEnumerable<ToDo.Areas.ToDo.Models.Tasks.Task> tasks = ViewData["Tasks"] as IEnumerable<ToDo.Areas.ToDo.Models.Tasks.Task>;
    ToDo.Areas.ToDo.Models.View.Config config = ViewData["ViewConfig"] as ToDo.Areas.ToDo.Models.View.Config;
    int AvailableSites = Convert.ToInt32(ViewData["AvailableSites"]);
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("/Areas/ToDo/Views/Shared/_PanelView.cshtml");}

@AvailableSites;
@config.BaseElementPerSite;
@config.ActualPerSite;

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            Czynność
        </th>
        <th>
            Temat
        </th>
        <th>
            Data rozpoczęcia
        </th>
        <th>
            Data zakończenia
        </th>
        <th>
            Status
        </th>
        <th>
            Priorytet
        </th>
        <th>
            % zakończenia
        </th>
        <th></th>
    </tr>

    @foreach (var task in tasks) {
        <tr>
            <td>
               @task.ID . @task.Action
            </td>
            <td>
                @task.Topic
            </td>
            <td>
                @task.Start
            </td>
            <td>
                @task.End
            </td>
            <td>
                @task.ActualStatus
            </td>
            <td>
                @task.ActualPriority
            </td>
            <td>
                @task.Progress
            </td>
            <td>
                <input type="checkbox" id="selected_@task.ID">
                <i class="fab fa-wpforms text-primary small-icon" onclick="OpenModalWindow('Description', @task.ID)"></i>
                @if (tasks.First() == task) {
                    <i class="fas fa-angle-up text-primary small-icon-disabled" onclick=""></i>
                } else {
                    <i class="fas fa-angle-up text-primary small-icon" onclick="PreviousInList('@Url.Action("PreviousInList")', @task.ID)"></i>
                }
                @if (tasks.Last() == task) {
                    <i class="fas fa-angle-down text-primary small-icon-disabled" onclick="', @task.ID)"></i>
                } else {
                    <i class="fas fa-angle-down text-primary small-icon" onclick="NextInList('@Url.Action("NextInList")', @task.ID)"></i>
                }
                <a href="@Url.Action("Delete", new { id=task.ID })" class="link-with-icon"><i class="fas fa-plus fa-rotate-45 text-danger small-icon"></i></a>
            </td>
            <!--
                <td>
                <input type="button" value="Szczegoly" id="detail_at Html.DisplayFor(modelItem => item.ID)" />

                    at Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    at Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    at Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            -->
        </tr>
    }

</table>
<div class="row">
    <div class="text-right">
        <p>
            Elementów na stronie
            <select class="btn" id="viewPerSite" onchange="ChangeElementsPerSite('@Url.Action("ElementsPerSite")')">
                @for (var iterator = 1; iterator <= 5; iterator++) {
                    int value = iterator * Convert.ToInt32(config.BaseElementPerSite);
                    if (value == config.ActualPerSite) {
                        <option value="@value" selected="selected">@value</option>
                    } else {
                        <option value="@value">@value</option>
                    }
                }

            </select>
        </p>
    </div>
</div>

<div class="row">
    <div class="text-center">
        @if (config.ActualSite == 1) {
            <input type="button" value="Poprzedni" class="btn btn-primary" disabled />
        } else {
            <input type="button" value="Poprzedni" class="btn btn-primary" onclick="PreviousSite('@Url.Action("ActualSite")')" />
        }
        <select class="btn" id="actualSite" onchange="ChangeActualSite('@Url.Action("ActualSite")')">
            @for (var iterator = 1; iterator <= AvailableSites + 1; iterator++) {
                if (iterator == config.ActualSite) {
                    <option value="@iterator" selected="selected">@iterator</option>
                } else {
                    <option value="@iterator">@iterator</option>
                }
            }
        </select>

        @if (config.ActualSite == AvailableSites + 1) {
            <input type="button" value="Następny" class="btn btn-primary" disabled />
        } else {
            <input type="button" value="Następny" class="btn btn-primary" onclick="NextSite('@Url.Action("ActualSite")')"  />
        }
    </div>
</div>