@model ToDo.Areas.Zadania.ViewModel.TasksViewConfigModel

@using ToDo.Areas.Zadania.Models
@using ToDo.Services.Zadania

@{
    Task nameModel = null;

    @helper OrderArrow(SortFilter main, SortFilter actual, bool reverse)
    {
        if (main == actual)
        {
            if (reverse)
            {
                <i class="fas fa-sort-down"></i>
            }
            else
            {
                <i class="fas fa-sort-up"></i>
            }
        }
    }

    var swapIndex = (Model.ViewConfig.ActualSite - 1) * Model.ViewConfig.TaskPerSite;
}


<table class="table">
    <thead>
        <tr>
            <td scope="col">@Html.DisplayNameFor(n => nameModel.Action)</td>
            <td scope="col">
                @Html.ActionLink(@Html.DisplayNameFor(n => nameModel.Topic).ToString(), "SortByTopic")
                @OrderArrow(Model.SortList.ActualFilter, SortFilter.TOPIC, Model.SortList.NormalSort)
            </td>
            <td scope="col">
                @Html.ActionLink(@Html.DisplayNameFor(n => nameModel.Start).ToString(), "SortByStart")
                @OrderArrow(Model.SortList.ActualFilter, SortFilter.START, Model.SortList.NormalSort)
            </td>
            <td scope="col">
                @Html.ActionLink(@Html.DisplayNameFor(n => nameModel.End).ToString(), "SortByEnd")
                @OrderArrow(Model.SortList.ActualFilter, SortFilter.END, Model.SortList.NormalSort)
            </td>
            <td scope="col">
                @Html.ActionLink(@Html.DisplayNameFor(n => nameModel.Status).ToString(), "SortByStatus")
                @OrderArrow(Model.SortList.ActualFilter, SortFilter.STATUS, Model.SortList.NormalSort)
            </td>
            <td scope="col">
                @Html.ActionLink(@Html.DisplayNameFor(n => nameModel.Priority).ToString(), "SortByPriority")
                @OrderArrow(Model.SortList.ActualFilter, SortFilter.PRIORITY, Model.SortList.NormalSort)
            </td>
            <td scope="col">@Html.DisplayNameFor(n => nameModel.Progress)</td>
            <td scope="col"></td>
        </tr>
    </thead>
    <tbody>
        @if (Model.SortList.actualList != null)
        {
            foreach (var task in Model.SortList.GetSectionFromList(Model.ViewConfig.ActualSite, Model.ViewConfig.TaskPerSite) )
            {
                <tr>

                    <td scope="col">@Html.DisplayFor(n => task.Action)</td>
                    <td scope="col">@Html.DisplayFor(n => task.Topic)</td>
                    <td scope="col">@Html.DisplayFor(n => task.Start)</td>
                    <td scope="col">@Html.DisplayFor(n => task.End)</td>
                    <td scope="col">@Html.DisplayFor(n => task.Status)</td>
                    <td scope="col">@Html.DisplayFor(n => task.Priority)</td>
                    <td scope="col">@Html.DisplayFor(n => task.Progress)</td>
                    <td scope="col">
                        <input type="checkbox" class="EditCheckboxes" id="selected_@task.Id" onclick="Select()">
                        <a href="@Url.Action("Description", new { id = @task.Id })" class="link-with-icon"><i class="fab fa-wpforms text-primary small-icon"></i></a>
                        @if (Model.SortList.actualList.FirstOrDefault() == task)
                        {
                            <i class="fas fa-angle-up text-primary small-icon-disabled"></i>
                        }
                        else
                        {
                            <a href='@Url.Action("SwapPrevious", new { id = swapIndex })'><i class="fas fa-angle-up text-primary small-icon"></i></a>
                        }
                        @if (Model.SortList.CountAllTasks == swapIndex)
                        {
                            <i class="fas fa-angle-down text-primary small-icon-disabled"></i>
                        }
                        else
                        {
                            <a href='@Url.Action("SwapNext", new { id = swapIndex })'><i class="fas fa-angle-down text-primary small-icon"></i></a>
                        }
                        <i class="fas fa-plus fa-rotate-45 text-danger small-icon" onclick="Delete(@task.Id)"></i>
                    </td>
                    @{
                        swapIndex++;
                    }
                </tr>
            }
        } else  {
            <h2>BRAK DANYCH.</h2>
        }
    </tbody>
</table>
