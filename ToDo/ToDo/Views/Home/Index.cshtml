@{
    ViewBag.Title = "Home Page";
}


<div class="row">
    <div class="col-md-4">
        <h2>Napotkane trudności 1</h2>
        <p>
            Nie wiem w sumie, jak skonfigurować routing, żeby pomijał tą domyślną przestrzeń na rzecz Areas/Zadania. Domyślnie mogę ustawić, by przy starcie strony (domyślny url) był wczytany kontroler Zadanie, ale wyszukuje widoków w domyślnym (globalnym) View. Mógłbym bawić się z magicznymi stringami, ale lepiej tego unikać, prawda?.
        </p>
    </div>
    <div class="col-md-4">
        <h2>Napotkane trudności 2</h2>
        <p>
            Czy istnieje opcja "bundlowania" plików css do innych stron? Bo domyślny sposób zezwala na dodawanie TYLKO plików lokalnych... A i przy okazji. Zgadzam się, że statyczne pola są "niebezpieczne" przy wielu użytkownikach. Dlatego w sumie nie powinienem tam korzystać z singletona?
        </p>
    </div>
    <div class="col-md-4">
        <h2>Napotkane trudności 3</h2>
        <p>
            Problem z tym polem plikowym. Chwilowo zostawię to jako string, później najwyżej spróbuję z tym powalczyć.
        </p>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Napotkane trudności 4</h2>
        <p>
            Walidacja po stronie serwera. Lepszym podejściem jest robienie klasy ciężkiej (i tam stosować kompleksową walidację) czy lekkiej? Bo swoją drogą taka klasa ciężka byłaby dość ciekawa, bo wtedy z każdego miejsca w każdym momencie przy edycji/tworzeniu będzie się odbywała walidacja. Tylko czy w takiej web-owej aplikacji to nie jest problem?
        </p>
    </div>
    <div class="col-md-4">
        <h2>Dodatkowa informacja 1</h2>
        <p>
            Owszem, fajnie by było zrobić włąsną klasę wyjątków, ale to najwyżej przy następnym zadaniu.
        </p>
    </div>
</div>