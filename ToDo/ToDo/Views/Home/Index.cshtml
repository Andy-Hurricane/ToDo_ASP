@{
    ViewBag.Title = "Home Page";
}


<div class="row">
    <div class="col-md-4">
        <h2>Napotkane trudności 1</h2>
        <p>
            Nie wiem w sumie, jak skonfigurować routing, żeby pomijał tą domyślną przestrzeń na rzecz Areas/Zadania. Domyślnie mogę ustawić, by przy starcie strony (domyślny url) był wczytany kontroler Zadanie, ale wyszukuje widoków w domyślnym (globalnym) View. Mógłbym bawić się z magicznymi stringami, ale lepiej tego unikać, prawda?.
        </p>
    </div>
    <div class="col-md-4">
        <h2>Napotkane trudności 2</h2>
        <p>
            Czy istnieje opcja "bundlowania" plików css do innych stron? Bo domyślny sposób zezwala na dodawanie TYLKO plików lokalnych... A i przy okazji. Zgadzam się, że statyczne pola są "niebezpieczne" przy wielu użytkownikach. Dlatego w sumie nie powinienem tam korzystać z singletona?
        </p>
    </div>
    <div class="col-md-4">
        <h2>Napotkane trudności 3</h2>
        <p>
            Problem z tym polem plikowym. Chwilowo zostawię to jako string, później najwyżej spróbuję z tym powalczyć.
        </p>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Napotkane trudności 4</h2>
        <p>
            Walidacja po stronie serwera. Lepszym podejściem jest robienie klasy ciężkiej (i tam stosować kompleksową walidację) czy lekkiej? Bo swoją drogą taka klasa ciężka byłaby dość ciekawa, bo wtedy z każdego miejsca w każdym momencie przy edycji/tworzeniu będzie się odbywała walidacja. Tylko czy w takiej web-owej aplikacji to nie jest problem?
        </p>
    </div>
    <div class="col-md-4">
        <h2>Dodatkowa informacja 1</h2>
        <p>
            <span style="text-decoration: line-through;">Owszem, fajnie by było zrobić włąsną klasę wyjątków, ale to najwyżej przy następnym zadaniu.</span> Dodałem własną klasę. Niestety, to nie działa tak, jak myślałem. Wydawało mi się, że jak jakaś 'osobna' klasa rzuca wyjątek, to bez problemu inna klasa może obsłużyć ten wyjątek. Czemu tutaj to nie działa w ten sposób? Obecnie (wydaje mi się, że nie do końca to jest dobre podejście) nadpisałem metodę OnException.
        </p>
    </div>
    <div class="col-md-4">
        <h2>Dodatkowa informacja 2</h2>
        <p>
            Tak, powinno się unikać magicznych stringów (chodzi mi teraz o dodanie statycznych metod do ustawiania 'aktywnego okna modalnego'), ale obecnie - wolę tak zostawić i skupić się na reszcie zadania.
        </p>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Dodatkowa informacja 3</h2>
        <p>
            Zdaję sobie sprawę, że sortowanie może być wyciągnięte do osobnej klasy.
        </p>
    </div>
    <div class="col-md-4">
        <h2>Napotkane trudności 5</h2>
        <p>
            Tak kombinuję i nie mogę wymyślić. Jeżeli chodzi o sortowanie: pobieramy kolekcję z bazy danych. Ona jest zawsze taka sama (taka sama kolejność). Mogę nadawać sortowanie za każdym razem - wtedy nie będzie działać przesuwanie 'góra'/'dół'. Mogę trzymać instancję listy w pamięci - wtedy 'przy wymaganych sytuacjach' ta lista jest wczytywana na nowo (np. gdy zostanie dodany/usunięty element). Tylko wtedy 'przesuwane' elementy też się posortują. Czy można to jakoś zrobić sensowniej? <span style="text-decoration: line-through;">Tymczasowo lista jest statyczna (nie powinno się tak robić, wiem, ale zrobiłem to tymczasowo, żeby pójść dalej).</span> Przerobiłem to na singletona.
</p>
    </div>
</div>